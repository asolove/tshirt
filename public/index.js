// Generated by psc-bundle 0.7.6.1
var PS = { };
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Prelude"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Show = function (show) {
      this.show = show;
  };                                                                           
  var unit = {};
  var show = function (dict) {
      return dict.show;
  };                                                                     
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });                 
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };
  var $$const = function (a) {
      return function (_3) {
          return a;
      };
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var bind = function (dict) {
      return dict.bind;
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_2(_1));
                  });
              });
          };
      };
  };
  exports["Show"] = Show;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["compose"] = compose;
  exports["const"] = $$const;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var $times$greater = function (__dict_Apply_1) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
          };
      };
  };
  exports["*>"] = $times$greater;;
 
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["throwException"] = $foreign.throwException;
  exports["error"] = $foreign.error;;
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Unsafe

  exports.unsafeInterleaveEff = function (f) {
    return f;
  };
 
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var unsafePerformEff = function (_0) {
      return Control_Monad_Eff.runPure($foreign.unsafeInterleaveEff(_0));
  };
  exports["unsafePerformEff"] = unsafePerformEff;
  exports["unsafeInterleaveEff"] = $foreign.unsafeInterleaveEff;;
 
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];     
  var unsafeThrowException = function (_0) {
      return Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Exception.throwException(_0));
  };
  var unsafeThrow = function (_1) {
      return unsafeThrowException(Control_Monad_Eff_Exception.error(_1));
  };
  exports["unsafeThrow"] = unsafeThrow;
  exports["unsafeThrowException"] = unsafeThrowException;;
 
})(PS["Control.Monad.Eff.Exception.Unsafe"] = PS["Control.Monad.Eff.Exception.Unsafe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Exists

  exports.mkExists = function (fa) {
    return fa;
  };

  exports.runExists = function (f) {
    return function (fa) {
      return f(fa);
    };
  };
 
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Exists"];
  var Prelude = PS["Prelude"];
  exports["runExists"] = $foreign.runExists;
  exports["mkExists"] = $foreign.mkExists;;
 
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["readSTRef"] = $foreign.readSTRef;;
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (__dict_Applicative_0) {
      return function (__dict_Foldable_1) {
          return function (f) {
              return foldr(__dict_Foldable_1)(function (_109) {
                  return Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]())(f(_109));
              })(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
          };
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (__dict_Foldable_26) {
      return function (__dict_Monoid_27) {
          return function (f) {
              return function (xs) {
                  return foldr(__dict_Foldable_26)(function (x) {
                      return function (acc) {
                          return Prelude["<>"](__dict_Monoid_27["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(__dict_Monoid_27))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (__dict_Monoid_28) {
      return foldMapDefaultR(foldableArray)(__dict_Monoid_28);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["traverse_"] = traverse_;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  exports["Left"] = Left;
  exports["Right"] = Right;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Either.Unsafe

  exports.unsafeThrow = function (msg) {
    throw new Error(msg);
  };
 
})(PS["Data.Either.Unsafe"] = PS["Data.Either.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Either.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];     
  var fromRight = function (_1) {
      if (_1 instanceof Data_Either.Right) {
          return _1.value0;
      };
      return $foreign.unsafeThrow("Data.Either.Unsafe.fromRight called on Left value");
  };
  exports["fromRight"] = fromRight;;
 
})(PS["Data.Either.Unsafe"] = PS["Data.Either.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Data_Either_Unsafe = PS["Data.Either.Unsafe"];     
  var MonadRec = function (__superclass_Prelude$dotMonad_0, tailRecM) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRecEff = function (f) {
      return function (a) {
          var f$prime = function (_15) {
              return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(f(_15));
          };
          return function __do() {
              var _3 = f$prime(a)();
              var _2 = {
                  value: _3
              };
              (function () {
                  while (!(function __do() {
                      var _1 = _2.value;
                      return (function () {
                          if (_1 instanceof Data_Either.Left) {
                              return function __do() {
                                  var _0 = f$prime(_1.value0)();
                                  _2.value = _0;
                                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                              };
                          };
                          if (_1 instanceof Data_Either.Right) {
                              return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                          };
                          throw new Error("Failed pattern match at Control.Monad.Rec.Class line 75, column 1 - line 76, column 1: " + [ _1.constructor.name ]);
                      })()();
                  })()) {

                  };
                  return {};
              })();
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Either_Unsafe.fromRight)(Control_Monad_ST.readSTRef(_2))();
          };
      };
  }; 
  var monadRecEff = new MonadRec(function () {
      return Control_Monad_Eff.monadEff;
  }, tailRecEff);
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
  exports["monadRecEff"] = monadRecEff;;
 
})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Exists = PS["Data.Exists"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Coyoneda = function (x) {
      return x;
  };
  var lowerCoyoneda = function (__dict_Functor_1) {
      return function (_6) {
          return Data_Exists.runExists(function (_4) {
              return Prelude["<$>"](__dict_Functor_1)(_4.k)(_4.fi);
          })(_6);
      };
  };
  var liftCoyoneda = function (fa) {
      return Coyoneda(Data_Exists.mkExists({
          k: Prelude.id(Prelude.categoryFn), 
          fi: fa
      }));
  }; 
  var coyoneda = function (k) {
      return function (fi) {
          return Coyoneda(Data_Exists.mkExists({
              k: k, 
              fi: fi
          }));
      };
  };
  var functorCoyoneda = new Prelude.Functor(function (f) {
      return function (_8) {
          return Data_Exists.runExists(function (_0) {
              return coyoneda(function (_28) {
                  return f(_0.k(_28));
              })(_0.fi);
          })(_8);
      };
  });
  var liftCoyonedaT = function (nat) {
      return function (_7) {
          return Data_Exists.runExists(function (_5) {
              return coyoneda(_5.k)(nat(_5.fi));
          })(_7);
      };
  };
  var liftCoyonedaTF = function (__dict_Functor_4) {
      return function (nat) {
          return function (_30) {
              return lowerCoyoneda(__dict_Functor_4)(liftCoyonedaT(nat)(_30));
          };
      };
  };
  exports["Coyoneda"] = Coyoneda;
  exports["liftCoyonedaTF"] = liftCoyonedaTF;
  exports["liftCoyonedaT"] = liftCoyonedaT;
  exports["lowerCoyoneda"] = lowerCoyoneda;
  exports["liftCoyoneda"] = liftCoyoneda;
  exports["coyoneda"] = coyoneda;
  exports["functorCoyoneda"] = functorCoyoneda;;
 
})(PS["Data.Coyoneda"] = PS["Data.Coyoneda"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Exists = PS["Data.Exists"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Inject = PS["Data.Inject"];     
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Free = (function () {
      function Free(value0) {
          this.value0 = value0;
      };
      Free.create = function (value0) {
          return new Free(value0);
      };
      return Free;
  })();
  var Gosub = (function () {
      function Gosub(value0) {
          this.value0 = value0;
      };
      Gosub.create = function (value0) {
          return new Gosub(value0);
      };
      return Gosub;
  })();
  var MonadFree = function (wrap) {
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  }; 
  var monadFreeFree = function (__dict_Functor_7) {
      return new MonadFree(Free.create);
  };
  var liftF = function (__dict_Functor_12) {
      return function (__dict_Monad_13) {
          return function (__dict_MonadFree_14) {
              return function (_33) {
                  return wrap(__dict_MonadFree_14)(Prelude.map(__dict_Functor_12)(Prelude.pure(__dict_Monad_13["__superclass_Prelude.Applicative_0"]()))(_33));
              };
          };
      };
  };
  var gosub = function (a) {
      return function (f) {
          return Gosub.create(Data_Exists.mkExists({
              a: a, 
              f: f
          }));
      };
  };
  var monadFree = function (__dict_Functor_8) {
      return new Prelude.Monad(function () {
          return applicativeFree(__dict_Functor_8);
      }, function () {
          return bindFree(__dict_Functor_8);
      });
  };
  var functorFree = function (__dict_Functor_20) {
      return new Prelude.Functor(function (f) {
          return function (_4) {
              if (_4 instanceof Pure) {
                  return new Pure(f(_4.value0));
              };
              return Prelude.liftA1(applicativeFree(__dict_Functor_20))(f)(_4);
          };
      });
  };
  var bindFree = function (__dict_Functor_21) {
      return new Prelude.Bind(function () {
          return applyFree(__dict_Functor_21);
      }, function (_5) {
          return function (k) {
              if (_5 instanceof Gosub) {
                  return Data_Exists.runExists(function (_1) {
                      return gosub(_1.a)(function (x) {
                          return gosub(function (unit) {
                              return _1.f(x);
                          })(k);
                      });
                  })(_5.value0);
              };
              return gosub(function (unit) {
                  return _5;
              })(k);
          };
      });
  };
  var applyFree = function (__dict_Functor_25) {
      return new Prelude.Apply(function () {
          return functorFree(__dict_Functor_25);
      }, Prelude.ap(monadFree(__dict_Functor_25)));
  };
  var applicativeFree = function (__dict_Functor_26) {
      return new Prelude.Applicative(function () {
          return applyFree(__dict_Functor_26);
      }, Pure.create);
  };
  var resume = function (__copy___dict_Functor_0) {
      return function (__copy_f) {
          var __dict_Functor_0 = __copy___dict_Functor_0;
          var f = __copy_f;
          tco: while (true) {
              var resumeGosub = function (_6) {
                  if (_6 instanceof Gosub) {
                      return Data_Exists.runExists(function (_3) {
                          var _17 = _3.a(Prelude.unit);
                          if (_17 instanceof Pure) {
                              return new Data_Either.Right(_3.f(_17.value0));
                          };
                          if (_17 instanceof Free) {
                              return new Data_Either.Left(Prelude["<$>"](__dict_Functor_0)(function (h) {
                                  return Prelude[">>="](bindFree(__dict_Functor_0))(h)(_3.f);
                              })(_17.value0));
                          };
                          if (_17 instanceof Gosub) {
                              return Data_Exists.runExists(function (_2) {
                                  return new Data_Either.Right(Prelude[">>="](bindFree(__dict_Functor_0))(_2.a(Prelude.unit))(function (z) {
                                      return Prelude[">>="](bindFree(__dict_Functor_0))(_2.f(z))(_3.f);
                                  }));
                              })(_17.value0);
                          };
                          throw new Error("Failed pattern match at Control.Monad.Free line 149, column 3 - line 150, column 3: " + [ _17.constructor.name ]);
                      })(_6.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free line 149, column 3 - line 150, column 3: " + [ _6.constructor.name ]);
              };
              if (f instanceof Pure) {
                  return new Data_Either.Right(f.value0);
              };
              if (f instanceof Free) {
                  return new Data_Either.Left(f.value0);
              };
              var _26 = resumeGosub(f);
              if (_26 instanceof Data_Either.Left) {
                  return new Data_Either.Left(_26.value0);
              };
              if (_26 instanceof Data_Either.Right) {
                  var __tco___dict_Functor_0 = __dict_Functor_0;
                  __dict_Functor_0 = __tco___dict_Functor_0;
                  f = _26.value0;
                  continue tco;
              };
              throw new Error("Failed pattern match: " + [ _26.constructor.name ]);
          };
      };
  };
  var runFreeM = function (__dict_Functor_1) {
      return function (__dict_MonadRec_2) {
          return function (fn) {
              return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_2)(function (f) {
                  var _29 = resume(__dict_Functor_1)(f);
                  if (_29 instanceof Data_Either.Left) {
                      return Prelude["<$>"]((((__dict_MonadRec_2["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(fn(_29.value0));
                  };
                  if (_29 instanceof Data_Either.Right) {
                      return Prelude["return"]((__dict_MonadRec_2["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(_29.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free line 163, column 1 - line 164, column 1: " + [ _29.constructor.name ]);
              });
          };
      };
  };
  var runFreeCM = function (__dict_MonadRec_4) {
      return function (nat) {
          return runFreeM(Data_Coyoneda.functorCoyoneda)(__dict_MonadRec_4)(Data_Coyoneda.liftCoyonedaTF((((__dict_MonadRec_4["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(nat));
      };
  };
  var liftFC = function (_38) {
      return liftF(Data_Coyoneda.functorCoyoneda)(monadFree(Data_Coyoneda.functorCoyoneda))(monadFreeFree(Data_Coyoneda.functorCoyoneda))(Data_Coyoneda.liftCoyoneda(_38));
  };
  exports["Pure"] = Pure;
  exports["Free"] = Free;
  exports["Gosub"] = Gosub;
  exports["MonadFree"] = MonadFree;
  exports["runFreeCM"] = runFreeCM;
  exports["runFreeM"] = runFreeM;
  exports["liftFC"] = liftFC;
  exports["liftF"] = liftF;
  exports["wrap"] = wrap;
  exports["functorFree"] = functorFree;
  exports["applyFree"] = applyFree;
  exports["applicativeFree"] = applicativeFree;
  exports["bindFree"] = bindFree;
  exports["monadFree"] = monadFree;
  exports["monadFreeFree"] = monadFreeFree;;
 
})(PS["Control.Monad.Free"] = PS["Control.Monad.Free"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Maybe.Unsafe

  exports.unsafeThrow = function (msg) {
    throw new Error(msg);
  };
 
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Maybe.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];     
  var fromJust = function (_0) {
      if (_0 instanceof Data_Maybe.Just) {
          return _0.value0;
      };
      if (_0 instanceof Data_Maybe.Nothing) {
          return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
      };
      throw new Error("Failed pattern match at Data.Maybe.Unsafe line 10, column 1 - line 11, column 1: " + [ _0.constructor.name ]);
  };
  exports["fromJust"] = fromJust;;
 
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };

  exports.setLineWidth = function(width) {
      return function(ctx) {
          return function() {
              ctx.lineWidth = width;
              return ctx;
          };
      };
  };

  exports.setFillStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.fillStyle = style;
              return ctx;
          };
      };
  };

  exports.setStrokeStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.strokeStyle = style;
              return ctx;
          };
      };
  };

  exports.setShadowColor = function(color) {
      return function(ctx) {
          return function() {
              ctx.shadowColor = color;
              return ctx;
          };
      };
  };

  exports.setShadowBlur = function(blur) {
      return function(ctx) {
          return function() {
              ctx.shadowBlur = blur;
              return ctx;
          };
      };
  };

  exports.setShadowOffsetX = function(offsetX) {
      return function(ctx) {
          return function() {
              ctx.shadowOffsetX = offsetX;
              return ctx;
          };
      };
  };

  exports.setShadowOffsetY = function(offsetY) {
      return function(ctx) {
          return function() {
              ctx.shadowOffsetY = offsetY;
              return ctx;
          };
      };
  };

  exports.setLineCapImpl = function(cap) {
      return function(ctx) {
          return function() {
              ctx.lineCap = cap;
              return ctx;
          };
      };
  };

  exports.setGlobalCompositeOperationImpl = function(ctx) {
      return function(op) {
          return function() {
              ctx.globalCompositeOperation = op;
              return ctx;
          };
      };
  };

  exports.setGlobalAlpha = function(ctx) {
      return function(alpha) {
          return function() {
              ctx.setGlobalAlpha = alpha;
              return ctx;
          };
      };
  };

  exports.beginPath = function(ctx) {
      return function() {
          ctx.beginPath();
          return ctx;
      };
  };

  exports.stroke = function(ctx) {
      return function() {
          ctx.stroke();
          return ctx;
      };
  };

  exports.fill = function(ctx) {
      return function() {
          ctx.fill();
          return ctx;
      };
  };

  exports.clip = function(ctx) {
      return function() {
          ctx.clip();
          return ctx;
      };
  };

  exports.lineTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.lineTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.moveTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.moveTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.closePath = function(ctx) {
      return function() {
          ctx.closePath();
          return ctx;
      };
  };

  exports.arc = function(ctx) {
      return function(a) {
          return function() {
              ctx.arc(a.x, a.y, a.r, a.start, a.end);
              return ctx;
          };
      };
  };

  exports.rect = function(ctx) {
      return function(r) {
          return function() {
              ctx.rect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.fillRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.fillRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.strokeRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.strokeRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.scale = function(t) {
      return function(ctx) {
          return function() {
              ctx.scale(t.scaleX, t.scaleY);
              return ctx;
          };
      };
  };

  exports.rotate = function(angle) {
      return function(ctx) {
          return function() {
              ctx.rotate(angle);
              return ctx;
          };
      };
  };

  exports.translate = function(t) {
      return function(ctx) {
          return function() {
              ctx.translate(t.translateX, t.translateY);
              return ctx;
          };
      };
  };

  exports.transform = function(t) {
      return function(ctx) {
          return function() {
              ctx.transform(t.m11, t.m12, t.m21, t.m22, t.m31, t.m32);
              return ctx;
          };
      };
  };

  exports.clearRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.clearRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.textAlignImpl = function(ctx) {
      return function() {
          return ctx.textAlign;
      }
  };

  exports.setTextAlignImpl = function(ctx) {
      return function(textAlign) {
          return function() {
              ctx.textAlign = textAlign;
              return ctx;
          }
      }
  };

  exports.font = function(ctx) {
      return function() {
          return ctx.font;
      };
  };

  exports.setFont = function(fontspec) {
      return function(ctx) {
          return function() {
              ctx.font = fontspec;
              return ctx;
          };
      };
  };

  exports.fillText = function(ctx) {
      return function(text) {
          return function(x) {
              return function(y) {
                  return function() {
                      ctx.fillText(text, x, y);
                      return ctx;
                  };
              };
          };
      };
  };

  exports.strokeText = function(ctx) {
      return function(text) {
          return function(x) {
              return function(y) {
                  return function() {
                      ctx.strokeText(text, x, y);
                      return ctx;
                  };
              };
          };
      };
  };

  exports.measureText = function(ctx) {
      return function(text) {
          return function() {
              return ctx.measureText(text);
          };
      };
  };

  exports.save = function(ctx) {
      return function() {
          ctx.save();
          return ctx;
      };
  };

  exports.restore = function(ctx) {
      return function() {
          ctx.restore();
          return ctx;
      };
  };

  exports.getImageData = function(ctx) {
      return function(x) {
          return function(y) {
              return function(w) {
                  return function(h) {
                      return function() {
                          return ctx.getImageData(x, y, w, h);
                      };
                  };
              };
          };
      };
  };

  exports.putImageDataFull = function(ctx) {
      return function(image_data) {
          return function(x) {
              return function(y) {
                  return function(dx) {
                      return function(dy) {
                          return function(dw) {
                              return function(dh) {
                                  return function() {
                                      ctx.putImageData(image_data, x, y, dx, dy, dw, dh);
                                      return ctx;
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };

  exports.putImageData = function(ctx) {
      return function(image_data) {
          return function(x) {
              return function(y) {
                  return function() {
                      ctx.putImageData(image_data, x, y);
                      return ctx;
                  };
              };
          };
      };
  };

  exports.createImageData = function(ctx) {
      return function(sw) {
          return function(sh) {
              return function() {
                  return ctx.createImageData(sw, sh);
              };
          };
      };
  };

  exports.createImageDataCopy = function(ctx) {
      return function(image_data) {
          return function() {
              return ctx.createImageData(image_data);
          };
      };
  };

  exports.drawImage = function(ctx) {
      return function(image_source) {
          return function(dx) {
              return function(dy) {
                  return function() {
                      ctx.drawImage(image_source, dx, dy);
                      return ctx;
                  };
              };
          };
      };
  };

 
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Graphics.Canvas"];
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception_Unsafe = PS["Control.Monad.Eff.Exception.Unsafe"];     
  var AlignLeft = (function () {
      function AlignLeft() {

      };
      AlignLeft.value = new AlignLeft();
      return AlignLeft;
  })();
  var AlignRight = (function () {
      function AlignRight() {

      };
      AlignRight.value = new AlignRight();
      return AlignRight;
  })();
  var AlignCenter = (function () {
      function AlignCenter() {

      };
      AlignCenter.value = new AlignCenter();
      return AlignCenter;
  })();
  var AlignStart = (function () {
      function AlignStart() {

      };
      AlignStart.value = new AlignStart();
      return AlignStart;
  })();
  var AlignEnd = (function () {
      function AlignEnd() {

      };
      AlignEnd.value = new AlignEnd();
      return AlignEnd;
  })();
  var Round = (function () {
      function Round() {

      };
      Round.value = new Round();
      return Round;
  })();
  var Square = (function () {
      function Square() {

      };
      Square.value = new Square();
      return Square;
  })();
  var Butt = (function () {
      function Butt() {

      };
      Butt.value = new Butt();
      return Butt;
  })();
  var SourceOver = (function () {
      function SourceOver() {

      };
      SourceOver.value = new SourceOver();
      return SourceOver;
  })();
  var SourceIn = (function () {
      function SourceIn() {

      };
      SourceIn.value = new SourceIn();
      return SourceIn;
  })();
  var SourceOut = (function () {
      function SourceOut() {

      };
      SourceOut.value = new SourceOut();
      return SourceOut;
  })();
  var SourceAtop = (function () {
      function SourceAtop() {

      };
      SourceAtop.value = new SourceAtop();
      return SourceAtop;
  })();
  var DestinationOver = (function () {
      function DestinationOver() {

      };
      DestinationOver.value = new DestinationOver();
      return DestinationOver;
  })();
  var DestinationIn = (function () {
      function DestinationIn() {

      };
      DestinationIn.value = new DestinationIn();
      return DestinationIn;
  })();
  var DestinationOut = (function () {
      function DestinationOut() {

      };
      DestinationOut.value = new DestinationOut();
      return DestinationOut;
  })();
  var DestinationAtop = (function () {
      function DestinationAtop() {

      };
      DestinationAtop.value = new DestinationAtop();
      return DestinationAtop;
  })();
  var Lighter = (function () {
      function Lighter() {

      };
      Lighter.value = new Lighter();
      return Lighter;
  })();
  var Copy = (function () {
      function Copy() {

      };
      Copy.value = new Copy();
      return Copy;
  })();
  var Xor = (function () {
      function Xor() {

      };
      Xor.value = new Xor();
      return Xor;
  })();
  var textAlign = function (ctx) {
      var unsafeParseTextAlign = function (_8) {
          if (_8 === "left") {
              return AlignLeft.value;
          };
          if (_8 === "right") {
              return AlignRight.value;
          };
          if (_8 === "center") {
              return AlignCenter.value;
          };
          if (_8 === "start") {
              return AlignStart.value;
          };
          if (_8 === "end") {
              return AlignEnd.value;
          };
          return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("invalid TextAlign: " + _8);
      };
      return Prelude["<$>"](Control_Monad_Eff.functorEff)(unsafeParseTextAlign)($foreign.textAlignImpl(ctx));
  };
  var showTextAlign = new Prelude.Show(function (_7) {
      if (_7 instanceof AlignLeft) {
          return "left";
      };
      if (_7 instanceof AlignRight) {
          return "right";
      };
      if (_7 instanceof AlignCenter) {
          return "center";
      };
      if (_7 instanceof AlignStart) {
          return "start";
      };
      if (_7 instanceof AlignEnd) {
          return "end";
      };
      throw new Error("Failed pattern match at Graphics.Canvas line 388, column 1 - line 395, column 1: " + [ _7.constructor.name ]);
  });
  var showComposite = new Prelude.Show(function (_6) {
      if (_6 instanceof SourceOver) {
          return "source-over";
      };
      if (_6 instanceof SourceIn) {
          return "source-in";
      };
      if (_6 instanceof SourceOut) {
          return "source-out";
      };
      if (_6 instanceof SourceAtop) {
          return "source-atop";
      };
      if (_6 instanceof DestinationOver) {
          return "destination-over";
      };
      if (_6 instanceof DestinationIn) {
          return "destination-in";
      };
      if (_6 instanceof DestinationOut) {
          return "destination-out";
      };
      if (_6 instanceof DestinationAtop) {
          return "destination-atop";
      };
      if (_6 instanceof Lighter) {
          return "lighter";
      };
      if (_6 instanceof Copy) {
          return "copy";
      };
      if (_6 instanceof Xor) {
          return "xor";
      };
      throw new Error("Failed pattern match at Graphics.Canvas line 228, column 1 - line 241, column 1: " + [ _6.constructor.name ]);
  });
  var setTextAlign = function (ctx) {
      return function (textalign) {
          return $foreign.setTextAlignImpl(ctx)(Prelude.show(showTextAlign)(textalign));
      };
  };
  var setLineCap = function (_5) {
      if (_5 instanceof Round) {
          return $foreign.setLineCapImpl("round");
      };
      if (_5 instanceof Square) {
          return $foreign.setLineCapImpl("square");
      };
      if (_5 instanceof Butt) {
          return $foreign.setLineCapImpl("butt");
      };
      throw new Error("Failed pattern match at Graphics.Canvas line 209, column 1 - line 210, column 1: " + [ _5.constructor.name ]);
  };
  var setGlobalCompositeOperation = function (ctx) {
      return function (composite) {
          return $foreign.setGlobalCompositeOperationImpl(ctx)(Prelude.show(showComposite)(composite));
      };
  };
  var getCanvasElementById = function (elId) {
      return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
  };
  exports["AlignLeft"] = AlignLeft;
  exports["AlignRight"] = AlignRight;
  exports["AlignCenter"] = AlignCenter;
  exports["AlignStart"] = AlignStart;
  exports["AlignEnd"] = AlignEnd;
  exports["Round"] = Round;
  exports["Square"] = Square;
  exports["Butt"] = Butt;
  exports["SourceOver"] = SourceOver;
  exports["SourceIn"] = SourceIn;
  exports["SourceOut"] = SourceOut;
  exports["SourceAtop"] = SourceAtop;
  exports["DestinationOver"] = DestinationOver;
  exports["DestinationIn"] = DestinationIn;
  exports["DestinationOut"] = DestinationOut;
  exports["DestinationAtop"] = DestinationAtop;
  exports["Lighter"] = Lighter;
  exports["Copy"] = Copy;
  exports["Xor"] = Xor;
  exports["setTextAlign"] = setTextAlign;
  exports["textAlign"] = textAlign;
  exports["setGlobalCompositeOperation"] = setGlobalCompositeOperation;
  exports["setLineCap"] = setLineCap;
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["showComposite"] = showComposite;
  exports["showTextAlign"] = showTextAlign;
  exports["drawImage"] = $foreign.drawImage;
  exports["createImageDataCopy"] = $foreign.createImageDataCopy;
  exports["createImageData"] = $foreign.createImageData;
  exports["putImageDataFull"] = $foreign.putImageDataFull;
  exports["putImageData"] = $foreign.putImageData;
  exports["getImageData"] = $foreign.getImageData;
  exports["restore"] = $foreign.restore;
  exports["save"] = $foreign.save;
  exports["measureText"] = $foreign.measureText;
  exports["strokeText"] = $foreign.strokeText;
  exports["fillText"] = $foreign.fillText;
  exports["setFont"] = $foreign.setFont;
  exports["font"] = $foreign.font;
  exports["transform"] = $foreign.transform;
  exports["translate"] = $foreign.translate;
  exports["rotate"] = $foreign.rotate;
  exports["scale"] = $foreign.scale;
  exports["clearRect"] = $foreign.clearRect;
  exports["strokeRect"] = $foreign.strokeRect;
  exports["fillRect"] = $foreign.fillRect;
  exports["rect"] = $foreign.rect;
  exports["arc"] = $foreign.arc;
  exports["closePath"] = $foreign.closePath;
  exports["moveTo"] = $foreign.moveTo;
  exports["lineTo"] = $foreign.lineTo;
  exports["clip"] = $foreign.clip;
  exports["fill"] = $foreign.fill;
  exports["stroke"] = $foreign.stroke;
  exports["beginPath"] = $foreign.beginPath;
  exports["setGlobalAlpha"] = $foreign.setGlobalAlpha;
  exports["setShadowColor"] = $foreign.setShadowColor;
  exports["setShadowOffsetY"] = $foreign.setShadowOffsetY;
  exports["setShadowOffsetX"] = $foreign.setShadowOffsetX;
  exports["setShadowBlur"] = $foreign.setShadowBlur;
  exports["setStrokeStyle"] = $foreign.setStrokeStyle;
  exports["setFillStyle"] = $foreign.setFillStyle;
  exports["setLineWidth"] = $foreign.setLineWidth;
  exports["getContext2D"] = $foreign.getContext2D;;
 
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];     
  var SetLineWidth = (function () {
      function SetLineWidth(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetLineWidth.create = function (value0) {
          return function (value1) {
              return new SetLineWidth(value0, value1);
          };
      };
      return SetLineWidth;
  })();
  var SetFillStyle = (function () {
      function SetFillStyle(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetFillStyle.create = function (value0) {
          return function (value1) {
              return new SetFillStyle(value0, value1);
          };
      };
      return SetFillStyle;
  })();
  var SetStrokeStyle = (function () {
      function SetStrokeStyle(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetStrokeStyle.create = function (value0) {
          return function (value1) {
              return new SetStrokeStyle(value0, value1);
          };
      };
      return SetStrokeStyle;
  })();
  var SetShadowColor = (function () {
      function SetShadowColor(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetShadowColor.create = function (value0) {
          return function (value1) {
              return new SetShadowColor(value0, value1);
          };
      };
      return SetShadowColor;
  })();
  var SetShadowBlur = (function () {
      function SetShadowBlur(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetShadowBlur.create = function (value0) {
          return function (value1) {
              return new SetShadowBlur(value0, value1);
          };
      };
      return SetShadowBlur;
  })();
  var SetShadowOffsetX = (function () {
      function SetShadowOffsetX(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetShadowOffsetX.create = function (value0) {
          return function (value1) {
              return new SetShadowOffsetX(value0, value1);
          };
      };
      return SetShadowOffsetX;
  })();
  var SetShadowOffsetY = (function () {
      function SetShadowOffsetY(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetShadowOffsetY.create = function (value0) {
          return function (value1) {
              return new SetShadowOffsetY(value0, value1);
          };
      };
      return SetShadowOffsetY;
  })();
  var SetLineCap = (function () {
      function SetLineCap(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetLineCap.create = function (value0) {
          return function (value1) {
              return new SetLineCap(value0, value1);
          };
      };
      return SetLineCap;
  })();
  var SetComposite = (function () {
      function SetComposite(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetComposite.create = function (value0) {
          return function (value1) {
              return new SetComposite(value0, value1);
          };
      };
      return SetComposite;
  })();
  var SetAlpha = (function () {
      function SetAlpha(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetAlpha.create = function (value0) {
          return function (value1) {
              return new SetAlpha(value0, value1);
          };
      };
      return SetAlpha;
  })();
  var BeginPath = (function () {
      function BeginPath(value0) {
          this.value0 = value0;
      };
      BeginPath.create = function (value0) {
          return new BeginPath(value0);
      };
      return BeginPath;
  })();
  var Stroke = (function () {
      function Stroke(value0) {
          this.value0 = value0;
      };
      Stroke.create = function (value0) {
          return new Stroke(value0);
      };
      return Stroke;
  })();
  var Fill = (function () {
      function Fill(value0) {
          this.value0 = value0;
      };
      Fill.create = function (value0) {
          return new Fill(value0);
      };
      return Fill;
  })();
  var Clip = (function () {
      function Clip(value0) {
          this.value0 = value0;
      };
      Clip.create = function (value0) {
          return new Clip(value0);
      };
      return Clip;
  })();
  var LineTo = (function () {
      function LineTo(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      LineTo.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new LineTo(value0, value1, value2);
              };
          };
      };
      return LineTo;
  })();
  var MoveTo = (function () {
      function MoveTo(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      MoveTo.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new MoveTo(value0, value1, value2);
              };
          };
      };
      return MoveTo;
  })();
  var ClosePath = (function () {
      function ClosePath(value0) {
          this.value0 = value0;
      };
      ClosePath.create = function (value0) {
          return new ClosePath(value0);
      };
      return ClosePath;
  })();
  var Arc = (function () {
      function Arc(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Arc.create = function (value0) {
          return function (value1) {
              return new Arc(value0, value1);
          };
      };
      return Arc;
  })();
  var Rect = (function () {
      function Rect(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Rect.create = function (value0) {
          return function (value1) {
              return new Rect(value0, value1);
          };
      };
      return Rect;
  })();
  var FillRect = (function () {
      function FillRect(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FillRect.create = function (value0) {
          return function (value1) {
              return new FillRect(value0, value1);
          };
      };
      return FillRect;
  })();
  var StrokeRect = (function () {
      function StrokeRect(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      StrokeRect.create = function (value0) {
          return function (value1) {
              return new StrokeRect(value0, value1);
          };
      };
      return StrokeRect;
  })();
  var ClearRect = (function () {
      function ClearRect(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ClearRect.create = function (value0) {
          return function (value1) {
              return new ClearRect(value0, value1);
          };
      };
      return ClearRect;
  })();
  var Scale = (function () {
      function Scale(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Scale.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Scale(value0, value1, value2);
              };
          };
      };
      return Scale;
  })();
  var Rotate = (function () {
      function Rotate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Rotate.create = function (value0) {
          return function (value1) {
              return new Rotate(value0, value1);
          };
      };
      return Rotate;
  })();
  var Translate = (function () {
      function Translate(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Translate.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Translate(value0, value1, value2);
              };
          };
      };
      return Translate;
  })();
  var Transform = (function () {
      function Transform(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Transform.create = function (value0) {
          return function (value1) {
              return new Transform(value0, value1);
          };
      };
      return Transform;
  })();
  var TextAlign = (function () {
      function TextAlign(value0) {
          this.value0 = value0;
      };
      TextAlign.create = function (value0) {
          return new TextAlign(value0);
      };
      return TextAlign;
  })();
  var SetTextAlign = (function () {
      function SetTextAlign(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetTextAlign.create = function (value0) {
          return function (value1) {
              return new SetTextAlign(value0, value1);
          };
      };
      return SetTextAlign;
  })();
  var Font = (function () {
      function Font(value0) {
          this.value0 = value0;
      };
      Font.create = function (value0) {
          return new Font(value0);
      };
      return Font;
  })();
  var SetFont = (function () {
      function SetFont(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetFont.create = function (value0) {
          return function (value1) {
              return new SetFont(value0, value1);
          };
      };
      return SetFont;
  })();
  var FillText = (function () {
      function FillText(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      FillText.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new FillText(value0, value1, value2, value3);
                  };
              };
          };
      };
      return FillText;
  })();
  var StrokeText = (function () {
      function StrokeText(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      StrokeText.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new StrokeText(value0, value1, value2, value3);
                  };
              };
          };
      };
      return StrokeText;
  })();
  var MeasureText = (function () {
      function MeasureText(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MeasureText.create = function (value0) {
          return function (value1) {
              return new MeasureText(value0, value1);
          };
      };
      return MeasureText;
  })();
  var Save = (function () {
      function Save(value0) {
          this.value0 = value0;
      };
      Save.create = function (value0) {
          return new Save(value0);
      };
      return Save;
  })();
  var Restore = (function () {
      function Restore(value0) {
          this.value0 = value0;
      };
      Restore.create = function (value0) {
          return new Restore(value0);
      };
      return Restore;
  })();
  var GetImageData = (function () {
      function GetImageData(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      GetImageData.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new GetImageData(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return GetImageData;
  })();
  var PutImageData = (function () {
      function PutImageData(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      PutImageData.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new PutImageData(value0, value1, value2, value3);
                  };
              };
          };
      };
      return PutImageData;
  })();
  var PutImageDataFull = (function () {
      function PutImageDataFull(value0, value1, value2, value3, value4, value5, value6, value7) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
          this.value7 = value7;
      };
      PutImageDataFull.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return function (value7) {
                                      return new PutImageDataFull(value0, value1, value2, value3, value4, value5, value6, value7);
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
      return PutImageDataFull;
  })();
  var CreateImageData = (function () {
      function CreateImageData(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      CreateImageData.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new CreateImageData(value0, value1, value2);
              };
          };
      };
      return CreateImageData;
  })();
  var CreateImageDataCopy = (function () {
      function CreateImageDataCopy(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CreateImageDataCopy.create = function (value0) {
          return function (value1) {
              return new CreateImageDataCopy(value0, value1);
          };
      };
      return CreateImageDataCopy;
  })();
  var DrawImage = (function () {
      function DrawImage(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      DrawImage.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new DrawImage(value0, value1, value2, value3);
                  };
              };
          };
      };
      return DrawImage;
  })();
  var translate = function (tx) {
      return function (ty) {
          return Control_Monad_Free.liftFC(new Translate(tx, ty, Prelude.unit));
      };
  };
  var transform = function (tx) {
      return Control_Monad_Free.liftFC(new Transform(tx, Prelude.unit));
  };
  var textAlign = Control_Monad_Free.liftFC(new TextAlign(Prelude.id(Prelude.categoryFn)));
  var strokeText = function (s) {
      return function (x) {
          return function (y) {
              return Control_Monad_Free.liftFC(new StrokeText(s, x, y, Prelude.unit));
          };
      };
  };
  var strokeRect = function (r) {
      return Control_Monad_Free.liftFC(new StrokeRect(r, Prelude.unit));
  };
  var stroke = Control_Monad_Free.liftFC(new Stroke(Prelude.unit));
  var setTextAlign = function (ta) {
      return Control_Monad_Free.liftFC(new SetTextAlign(ta, Prelude.unit));
  };
  var setStrokeStyle = function (s) {
      return Control_Monad_Free.liftFC(new SetStrokeStyle(s, Prelude.unit));
  };
  var setShadowOffsetY = function (n) {
      return Control_Monad_Free.liftFC(new SetShadowOffsetY(n, Prelude.unit));
  };
  var setShadowOffsetX = function (n) {
      return Control_Monad_Free.liftFC(new SetShadowOffsetX(n, Prelude.unit));
  };
  var setShadowColor = function (c) {
      return Control_Monad_Free.liftFC(new SetShadowColor(c, Prelude.unit));
  };
  var setShadowBlur = function (n) {
      return Control_Monad_Free.liftFC(new SetShadowBlur(n, Prelude.unit));
  };
  var setLineWidth = function (w) {
      return Control_Monad_Free.liftFC(new SetLineWidth(w, Prelude.unit));
  };
  var setLineCap = function (lc) {
      return Control_Monad_Free.liftFC(new SetLineCap(lc, Prelude.unit));
  };
  var setFont = function (f) {
      return Control_Monad_Free.liftFC(new SetFont(f, Prelude.unit));
  };
  var setFillStyle = function (s) {
      return Control_Monad_Free.liftFC(new SetFillStyle(s, Prelude.unit));
  };
  var scale = function (sx) {
      return function (sy) {
          return Control_Monad_Free.liftFC(new Scale(sx, sy, Prelude.unit));
      };
  };
  var save = Control_Monad_Free.liftFC(new Save(Prelude.unit));
  var rotate = function (th) {
      return Control_Monad_Free.liftFC(new Rotate(th, Prelude.unit));
  };
  var restore = Control_Monad_Free.liftFC(new Restore(Prelude.unit));
  var rect = function (r) {
      return Control_Monad_Free.liftFC(new Rect(r, Prelude.unit));
  };
  var putImageDataFull = function (d) {
      return function (x) {
          return function (y) {
              return function (dx) {
                  return function (dy) {
                      return function (dw) {
                          return function (dh) {
                              return Control_Monad_Free.liftFC(new PutImageDataFull(d, x, y, dx, dy, dw, dh, Prelude.unit));
                          };
                      };
                  };
              };
          };
      };
  };
  var putImageData = function (d) {
      return function (x) {
          return function (y) {
              return Control_Monad_Free.liftFC(new PutImageData(d, x, y, Prelude.unit));
          };
      };
  };
  var moveTo = function (x) {
      return function (y) {
          return Control_Monad_Free.liftFC(new MoveTo(x, y, Prelude.unit));
      };
  };
  var measureText = function (s) {
      return Control_Monad_Free.liftFC(new MeasureText(s, Prelude.id(Prelude.categoryFn)));
  };
  var lineTo = function (x) {
      return function (y) {
          return Control_Monad_Free.liftFC(new LineTo(x, y, Prelude.unit));
      };
  };
  var getImageData = function (x) {
      return function (y) {
          return function (w) {
              return function (h) {
                  return Control_Monad_Free.liftFC(new GetImageData(x, y, w, h, Prelude.id(Prelude.categoryFn)));
              };
          };
      };
  };
  var font = Control_Monad_Free.liftFC(new Font(Prelude.id(Prelude.categoryFn)));
  var fillText = function (s) {
      return function (x) {
          return function (y) {
              return Control_Monad_Free.liftFC(new FillText(s, x, y, Prelude.unit));
          };
      };
  };
  var fillRect = function (r) {
      return Control_Monad_Free.liftFC(new FillRect(r, Prelude.unit));
  };
  var fill = Control_Monad_Free.liftFC(new Fill(Prelude.unit));
  var drawImage = function (src) {
      return function (x) {
          return function (y) {
              return Control_Monad_Free.liftFC(new DrawImage(src, x, y, Prelude.unit));
          };
      };
  };
  var createImageDataCopy = function (d) {
      return Control_Monad_Free.liftFC(new CreateImageDataCopy(d, Prelude.id(Prelude.categoryFn)));
  };
  var createImageData = function (w) {
      return function (h) {
          return Control_Monad_Free.liftFC(new CreateImageData(w, h, Prelude.id(Prelude.categoryFn)));
      };
  };
  var closePath = Control_Monad_Free.liftFC(new ClosePath(Prelude.unit));
  var clip = Control_Monad_Free.liftFC(new Clip(Prelude.unit));
  var clearRect = function (r) {
      return Control_Monad_Free.liftFC(new ClearRect(r, Prelude.unit));
  };
  var beginPath = Control_Monad_Free.liftFC(new BeginPath(Prelude.unit));
  var arc = function (a) {
      return Control_Monad_Free.liftFC(new Arc(a, Prelude.unit));
  };
  var runGraphics = function (ctx) {
      var interp = function (_0) {
          if (_0 instanceof SetLineWidth) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setLineWidth(_0.value0)(ctx));
          };
          if (_0 instanceof SetFillStyle) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setFillStyle(_0.value0)(ctx));
          };
          if (_0 instanceof SetStrokeStyle) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setStrokeStyle(_0.value0)(ctx));
          };
          if (_0 instanceof SetShadowColor) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setShadowColor(_0.value0)(ctx));
          };
          if (_0 instanceof SetShadowBlur) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setShadowBlur(_0.value0)(ctx));
          };
          if (_0 instanceof SetShadowOffsetX) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setShadowOffsetX(_0.value0)(ctx));
          };
          if (_0 instanceof SetShadowOffsetY) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setShadowOffsetY(_0.value0)(ctx));
          };
          if (_0 instanceof SetLineCap) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setLineCap(_0.value0)(ctx));
          };
          if (_0 instanceof SetComposite) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setGlobalCompositeOperation(ctx)(_0.value0));
          };
          if (_0 instanceof SetAlpha) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setGlobalAlpha(ctx)(_0.value0));
          };
          if (_0 instanceof BeginPath) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value0))(Graphics_Canvas.beginPath(ctx));
          };
          if (_0 instanceof Stroke) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value0))(Graphics_Canvas.stroke(ctx));
          };
          if (_0 instanceof Fill) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value0))(Graphics_Canvas.fill(ctx));
          };
          if (_0 instanceof Clip) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value0))(Graphics_Canvas.clip(ctx));
          };
          if (_0 instanceof LineTo) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value2))(Graphics_Canvas.lineTo(ctx)(_0.value0)(_0.value1));
          };
          if (_0 instanceof MoveTo) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value2))(Graphics_Canvas.moveTo(ctx)(_0.value0)(_0.value1));
          };
          if (_0 instanceof ClosePath) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value0))(Graphics_Canvas.closePath(ctx));
          };
          if (_0 instanceof Arc) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.arc(ctx)(_0.value0));
          };
          if (_0 instanceof Rect) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.rect(ctx)(_0.value0));
          };
          if (_0 instanceof FillRect) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.fillRect(ctx)(_0.value0));
          };
          if (_0 instanceof StrokeRect) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.strokeRect(ctx)(_0.value0));
          };
          if (_0 instanceof ClearRect) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.clearRect(ctx)(_0.value0));
          };
          if (_0 instanceof Scale) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value2))(Graphics_Canvas.scale({
                  scaleX: _0.value0, 
                  scaleY: _0.value1
              })(ctx));
          };
          if (_0 instanceof Rotate) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.rotate(_0.value0)(ctx));
          };
          if (_0 instanceof Translate) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value2))(Graphics_Canvas.translate({
                  translateX: _0.value0, 
                  translateY: _0.value1
              })(ctx));
          };
          if (_0 instanceof Transform) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.transform(_0.value0)(ctx));
          };
          if (_0 instanceof TextAlign) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(_0.value0)(Graphics_Canvas.textAlign(ctx));
          };
          if (_0 instanceof SetTextAlign) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setTextAlign(ctx)(_0.value0));
          };
          if (_0 instanceof Font) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(_0.value0)(Graphics_Canvas.font(ctx));
          };
          if (_0 instanceof SetFont) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value1))(Graphics_Canvas.setFont(_0.value0)(ctx));
          };
          if (_0 instanceof FillText) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value3))(Graphics_Canvas.fillText(ctx)(_0.value0)(_0.value1)(_0.value2));
          };
          if (_0 instanceof StrokeText) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value3))(Graphics_Canvas.strokeText(ctx)(_0.value0)(_0.value1)(_0.value2));
          };
          if (_0 instanceof MeasureText) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(_0.value1)(Graphics_Canvas.measureText(ctx)(_0.value0));
          };
          if (_0 instanceof Save) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value0))(Graphics_Canvas.save(ctx));
          };
          if (_0 instanceof Restore) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value0))(Graphics_Canvas.restore(ctx));
          };
          if (_0 instanceof GetImageData) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(_0.value4)(Graphics_Canvas.getImageData(ctx)(_0.value0)(_0.value1)(_0.value2)(_0.value3));
          };
          if (_0 instanceof PutImageData) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value3))(Graphics_Canvas.putImageData(ctx)(_0.value0)(_0.value1)(_0.value2));
          };
          if (_0 instanceof PutImageDataFull) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value7))(Graphics_Canvas.putImageDataFull(ctx)(_0.value0)(_0.value1)(_0.value2)(_0.value3)(_0.value4)(_0.value5)(_0.value6));
          };
          if (_0 instanceof CreateImageData) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(_0.value2)(Graphics_Canvas.createImageData(ctx)(_0.value0)(_0.value1));
          };
          if (_0 instanceof CreateImageDataCopy) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(_0.value1)(Graphics_Canvas.createImageDataCopy(ctx)(_0.value0));
          };
          if (_0 instanceof DrawImage) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_0.value3))(Graphics_Canvas.drawImage(ctx)(_0.value0)(_0.value1)(_0.value2));
          };
          throw new Error("Failed pattern match at Graphics.Canvas.Free line 235, column 3 - line 236, column 3: " + [ _0.constructor.name ]);
      };
      return Control_Monad_Free.runFreeCM(Control_Monad_Rec_Class.monadRecEff)(interp);
  };
  exports["runGraphics"] = runGraphics;
  exports["drawImage"] = drawImage;
  exports["createImageDataCopy"] = createImageDataCopy;
  exports["createImageData"] = createImageData;
  exports["putImageDataFull"] = putImageDataFull;
  exports["putImageData"] = putImageData;
  exports["getImageData"] = getImageData;
  exports["restore"] = restore;
  exports["save"] = save;
  exports["measureText"] = measureText;
  exports["strokeText"] = strokeText;
  exports["fillText"] = fillText;
  exports["setFont"] = setFont;
  exports["font"] = font;
  exports["setTextAlign"] = setTextAlign;
  exports["textAlign"] = textAlign;
  exports["transform"] = transform;
  exports["translate"] = translate;
  exports["rotate"] = rotate;
  exports["scale"] = scale;
  exports["clearRect"] = clearRect;
  exports["strokeRect"] = strokeRect;
  exports["fillRect"] = fillRect;
  exports["rect"] = rect;
  exports["arc"] = arc;
  exports["closePath"] = closePath;
  exports["moveTo"] = moveTo;
  exports["lineTo"] = lineTo;
  exports["clip"] = clip;
  exports["fill"] = fill;
  exports["stroke"] = stroke;
  exports["beginPath"] = beginPath;
  exports["setLineCap"] = setLineCap;
  exports["setShadowOffsetY"] = setShadowOffsetY;
  exports["setShadowOffsetX"] = setShadowOffsetX;
  exports["setShadowBlur"] = setShadowBlur;
  exports["setShadowColor"] = setShadowColor;
  exports["setStrokeStyle"] = setStrokeStyle;
  exports["setFillStyle"] = setFillStyle;
  exports["setLineWidth"] = setLineWidth;;
 
})(PS["Graphics.Canvas.Free"] = PS["Graphics.Canvas.Free"] || {});
(function(exports) {
  /* global exports */
  "use strict";                

  exports.pi = Math.PI;      
 
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Math"];
  exports["pi"] = $foreign.pi;;
 
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Graphics_Canvas_Free = PS["Graphics.Canvas.Free"];
  var $$Math = PS["Math"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var width = 500.0;
  var height = 250.0;
  var centerY = 200.0;
  var centerX = 250.0;
  var arcAboveRobot = function (r) {
      return Prelude.bind(Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.moveTo(centerX - r)(centerY))(function () {
          return Prelude.bind(Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.arc({
              x: centerX, 
              y: centerY, 
              r: r, 
              start: $$Math.pi, 
              end: 0.0
          }))(function () {
              return Graphics_Canvas_Free.stroke;
          });
      });
  };
  var main = function __do() {
      var _1 = Graphics_Canvas.getCanvasElementById("canvas")();
      var _0 = Graphics_Canvas.getContext2D(Data_Maybe_Unsafe.fromJust(_1))();
      return Graphics_Canvas_Free.runGraphics(_0)(Prelude.bind(Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.setFillStyle("#999999"))(function () {
          return Prelude.bind(Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.rect({
              x: 0.0, 
              y: 0.0, 
              w: width, 
              h: height
          }))(function () {
              return Prelude.bind(Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.fill)(function () {
                  return Prelude.bind(Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.setStrokeStyle("#FFFFFF"))(function () {
                      return Data_Foldable.traverse_(Control_Monad_Free.applicativeFree(Data_Coyoneda.functorCoyoneda))(Data_Foldable.foldableArray)(arcAboveRobot)([ 20.0, 30.0, 40.0, 50.0, 60.0, 70.0, 100.0 ]);
                  });
              });
          });
      }))();
  };
  exports["arcAboveRobot"] = arcAboveRobot;
  exports["main"] = main;
  exports["centerY"] = centerY;
  exports["centerX"] = centerX;
  exports["width"] = width;
  exports["height"] = height;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();
